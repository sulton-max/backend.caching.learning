// <auto-generated />
using System;
using LinkForwarding.Core.DataAccess.DataContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LinkForwarding.Core.Migrations
{
    [DbContext(typeof(AppDataContext))]
    partial class AppDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LinkForwarding.Core.Core.Models.Entities.Link", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActualLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("LinkPolicyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PolicyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ShortenedLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LinkPolicyId");

                    b.HasIndex("PolicyId");

                    b.ToTable("Links");
                });

            modelBuilder.Entity("LinkForwarding.Core.Core.Models.Entities.LinkPolicy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan>("ExpireTime")
                        .HasColumnType("time");

                    b.Property<bool>("IsShareable")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("LinkPolicies");
                });

            modelBuilder.Entity("LinkForwarding.Core.Core.Models.Entities.Link", b =>
                {
                    b.HasOne("LinkForwarding.Core.Core.Models.Entities.LinkPolicy", null)
                        .WithMany("Links")
                        .HasForeignKey("LinkPolicyId");

                    b.HasOne("LinkForwarding.Core.Core.Models.Entities.LinkPolicy", "LinkPolicy")
                        .WithMany()
                        .HasForeignKey("PolicyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LinkPolicy");
                });

            modelBuilder.Entity("LinkForwarding.Core.Core.Models.Entities.LinkPolicy", b =>
                {
                    b.Navigation("Links");
                });
#pragma warning restore 612, 618
        }
    }
}
